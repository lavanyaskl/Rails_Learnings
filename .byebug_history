c
msg
c
@article.errors.full_messages.last
c
@article.errors.full_messages
@article.errors
@article
@articles
c
@article.errors.any?
@article.errors
c
article.errors.full_messages
article.errors
article.error
article.save
article
c
article.errors.full_messages
article.valid?
article.errors
article.save
article = Article.new(params.permit(:title, :body))
c
article.save
article = Article.new(params.permit(:title, :body))
params
c
n
@password
BCrypt::Password.new(encrypted_password)
encrypted_password
n
User.find_by_email(params[:email])
user.password
c
n
BCrypt::Password.create(encrypted_password)
BCrypt::Password.new(encrypted_password)
encrypted_password
user
user.encrypted_password
user.encryped_password
encryped_password
BCrypt::Password.new(encrypted_password)
@password
n
c
n
@password
c
n
c
n
BCrypt::Password.create(password)
password
c
user.password == params[:encrypted_password]
c
user.encrypted_password
n
c
user.encrypted_password
user
c
BCrypt::Password.create(user.encrypted_password)
user.password
user.encrypted_password
BCrypt::Password.new(user.encrypted_password)
user.password
user.password == params[:encrypted_password]
c
n
user.encrypted_password
n
c
user = _
User.new(name: params[:name], email: params[:email])
User.new()
user.encrypted_password
user
n
c
user.encrypted_password
user
n
c
n
user.encrypted_password
user
c
n
user.encrypted_password
user
n
c
BCrypt::Password.new(user.encrypted_password) == params[:encrypted_password]
BCrypt::Password.new(user.encrypted_password)
BCrypt::Password.new(params[:encrypted_password])
BCrypt::Password.create(params[:encrypted_password])
params[:encrypted_password]
user.encrypted_password
user
params[:encrypted_password]
c
user.encrypted_password == params[:encrypted_password]
params[:encrypted_password]
user.encrypted_password
user
c
n
'lavanya.s@rently.com'.match('^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$')
params[:email].match('^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$')
params
c
params
c
n
session[:user_id]
session
n
params[:encrypted_password]
params
user
c
session
session[:sample]
session[:test]
session
c
session
c
flash
params
c
notice
c
flash[:notice].now
flash[:notice]
flash
notice
c
params[:notice]
params
c
c\
c
params
c
params
c
Article.find(params[:id])
Article.all
Aritcle.find(params[:id])
params[:id]
params
c
params
c
Article.new(params.permit(:title, :body))
Article.new(params)
params.permit(:title, :body)
Article.new(params)
Artcile.new(params)
params
